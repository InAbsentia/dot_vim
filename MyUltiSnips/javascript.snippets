snippet cl "console.log('string')" b
console.log('$0');
endsnippet

# ------
# ESLint
# ------

snippet esd "eslint disable (esd)" b
/* eslint-disable $0 */
endsnippet

snippet ese "eslint enable (ese)" b
/* eslint-enable $0 */
endsnippet

snippet esl "eslint disable line (edl)" i
// eslint-disable-line $0
endsnippet

snippet esl "eslint disable next line (ednl)" i
// eslint-disable-next-line $0
endsnippet

# ---------
# Functions
# ---------

snippet af "arrow function (af)"
(${1:argument}) => {
  ${VISUAL}$0
}
endsnippet

snippet fn "function literal (fn)"
function (${1:argument}) {
	${VISUAL}$0
}
endsnippet

# -------------
# Miscellaneous
# -------------

snippet switch "switch statement (switch)" b
switch (${1:variable}) {
  case ${2:case1}:
    $0
    break;
  default:
}
endsnippet

snippet exp "Export from location (exp)" b
export $1 from '${2:./}$1';
endsnippet

snippet expn "Export nested (expn)" b
export { $1 } from '${2:./}';
endsnippet

snippet expf "Export function (expf)" b
export default function ${1:name}(${2:arguments}) {
  $0
}
endsnippet

# -----
# React
# -----

snippet useS "useState() (useS)" b
const [$1, set$4`!p snip.rv=upperfirst(t[1])`] = useState$3($2);$0
endsnippet

snippet useE "useEffect() (useE)" b
useEffect(() => {
  $1$0
}$2);
endsnippet
